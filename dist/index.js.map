{"version":3,"sources":["../index.js"],"names":["express","require","mysql","fs","PDFDocument","blobStream","db","createConnection","host","user","password","database","connect","err","console","log","app","get","req","res","sql","query","result","send","firstName","lastName","image","readFileSync","params","id","doc","filename","encodeURIComponent","setHeader","content","y","text","pipe","end","sql1","toString","listen"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,IAAME,KAAKF,QAAQ,IAAR,CAAX;AACA,IAAMG,cAAcH,QAAQ,QAAR,CAApB;AACA,IAAMI,aAAcJ,QAAS,aAAT,CAApB;;AAEA;AACA,IAAMK,KAAKJ,MAAMK,gBAAN,CAAuB;AAC9BC,UAAM,WADwB;AAE9BC,UAAM,MAFwB;AAG9BC,cAAU,EAHoB;AAI9BC,cAAU;AAJoB,CAAvB,CAAX;;AAOAL,GAAGM,OAAH,CAAW,UAACC,GAAD,EAAS;AAChB,QAAGA,GAAH,EAAO;AACH,cAAMA,GAAN;AACH;AACDC,YAAQC,GAAR,CAAY,iBAAZ;AACH,CALD;;AAOA,IAAMC,MAAMhB,SAAZ;;AAEA;;;;;;;;;;;AAWCgB,IAAIC,GAAJ,CAAQ,kBAAR,EAA4B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACrC,QAAIC,MAAM,uBACN,kCADM,GAEN,kCAFM,GAGN,iCAHM,GAIN,wBAJM,GAKN,oBALM,GAMN,yBANJ;AAOAd,OAAGe,KAAH,CAASD,GAAT,EAAc,UAACP,GAAD,EAAMS,MAAN,EAAiB;AAC3B,YAAIT,GAAJ,EAAS,MAAMA,GAAN;AACTC,gBAAQC,GAAR,CAAYO,MAAZ;AACAH,YAAII,IAAJ,CAAS,oBAAT;AACH,KAJD;AAKH,CAbD;;AAeDP,IAAIC,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC7B,QAAIV,OAAO,EAACe,WAAW,MAAZ,EAAoBC,UAAU,MAA9B,EAAsCC,OAAOvB,GAAGwB,YAAH,CAAgB,cAAhB,CAA7C,EAAX;AACA,QAAIP,MAAM,wBAAV;AACAd,OAAGe,KAAH,CAASD,GAAT,EAAcX,IAAd,EAAoB,UAACI,GAAD,EAAMS,MAAN,EAAiB;AACjC,YAAIT,GAAJ,EAAS,MAAMA,GAAN;AACTC,gBAAQC,GAAR,CAAYO,MAAZ;AACAH,YAAII,IAAJ,CAAS,YAAT;AACH,KAJD;AAKH,CARD;;AAUAP,IAAIC,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACjC,QAAIC,gDAA8CF,IAAIU,MAAJ,CAAWC,EAAzD,OAAJ;AACAvB,OAAGe,KAAH,CAASD,GAAT,EAAc,UAACP,GAAD,EAAMS,MAAN,EAAiB;AAC3B,YAAIT,GAAJ,EAAS,MAAMA,GAAN;AACTC,gBAAQC,GAAR,CAAYO,OAAO,CAAP,CAAZ;AACAH,YAAII,IAAJ,CAAS,cAAT;AACH,KAJD;AAKH,CAPD;;AASAP,IAAIC,GAAJ,CAAQ,mBAAR,EAA6B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACtC,QAAIC,gDAA8CF,IAAIU,MAAJ,CAAWC,EAAzD,OAAJ;AACAvB,OAAGe,KAAH,CAASD,GAAT,EAAc,UAACP,GAAD,EAAMS,MAAN,EAAiB;AAC3B,YAAIT,GAAJ,EAAS,MAAMA,GAAN;AACTC,gBAAQC,GAAR,CAAYO,OAAO,CAAP,CAAZ;AACA,YAAIQ,MAAM,IAAI1B,WAAJ,EAAV;AACD;AACC,YAAI2B,WAAWT,OAAO,CAAP,EAAUE,SAAzB;AACAO,mBAAWC,mBAAmBD,QAAnB,IAA+B,MAA1C;;AAEAZ,YAAIc,SAAJ,CAAc,qBAAd,EAAqC,2BAA2BF,QAA3B,GAAsC,GAA3E;AACAZ,YAAIc,SAAJ,CAAc,cAAd,EAA8B,iBAA9B;;AAEA,YAAMC,UAAUZ,OAAO,CAAP,EAAUE,SAAV,GAAsB,GAAtB,GAA4BF,OAAO,CAAP,EAAUG,QAAtD;AACAK,YAAIK,CAAJ,GAAQ,GAAR;AACAL,YAAIM,IAAJ,CAASF,OAAT,EAAkB,EAAlB,EAAsB,EAAtB;AACAJ,YAAIO,IAAJ,CAASlB,GAAT;AACAW,YAAIQ,GAAJ;AACR;;;;;AAKQ,YAAIC,kCAA+BT,IAAIU,QAAJ,EAA/B,6BAAoEtB,IAAIU,MAAJ,CAAWC,EAA/E,OAAJ;AACAvB,WAAGe,KAAH,CAASkB,IAAT,EAAe,UAAC1B,GAAD,EAAMS,MAAN,EAAiB;AAC5B,gBAAIT,GAAJ,EAAS,MAAMA,GAAN;AACTC,oBAAQC,GAAR,CAAYO,OAAO,CAAP,CAAZ;AACH,SAHD;AAIH,KA1BD;AA4BH,CA9BD;;AAgCAN,IAAIyB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnB3B,YAAQC,GAAR,CAAY,6BAAZ;AACH,CAFD","file":"index.js","sourcesContent":["const express = require('express');\r\nconst mysql = require('mysql');\r\nconst fs = require('fs');\r\nconst PDFDocument = require('pdfkit')\r\nconst blobStream  = require ('blob-stream');\r\n\r\n//Create connection\r\nconst db = mysql.createConnection({\r\n    host: 'localhost',\r\n    user: 'root',\r\n    password: '',\r\n    database: 'nodemysql'\r\n});\r\n\r\ndb.connect((err) => {\r\n    if(err){\r\n        throw err;\r\n    }\r\n    console.log('MySQL connected');\r\n});\r\n\r\nconst app = express();\r\n\r\n/*\r\n app.get('/createdb', (req,res) => {\r\n     let sql = 'CREATE DATABASE nodemysql';\r\n     db.query(sql, (err, result) => {\r\n         if (err) throw err;\r\n         console.log(result);\r\n         res.send('DB created');\r\n     });\r\n });\r\n*/\r\n\r\n app.get('/createusertable', (req,res) => {\r\n     let sql = 'CREATE TABLE user(' +\r\n         'id int NOT NULL AUTO_INCREMENT, ' +\r\n         'firstName VARCHAR(32) NOT NULL, ' +\r\n         'lastName VARCHAR(32) NOT NULL, ' +\r\n         'image blob, pdf blob, ' +\r\n         'PRIMARY KEY (id), ' +\r\n         'UNIQUE KEY (firstName))';\r\n     db.query(sql, (err, result) => {\r\n         if (err) throw err;\r\n         console.log(result);\r\n         res.send('User table created');\r\n     });\r\n });\r\n\r\napp.get('/adduser', (req,res) => {\r\n    let user = {firstName: 'July', lastName: 'Bgdn', image: fs.readFileSync('D:\\\\pic1.jpg')}\r\n    let sql = 'INSERT INTO user SET ?';\r\n    db.query(sql, user, (err, result) => {\r\n        if (err) throw err;\r\n        console.log(result);\r\n        res.send('User added');\r\n    });\r\n});\r\n\r\napp.get('/getuser/:id', (req,res) => {\r\n    let sql = `SELECT * FROM user WHERE firstName=\\'${req.params.id}\\'`;\r\n    db.query(sql, (err, result) => {\r\n        if (err) throw err;\r\n        console.log(result[0]);\r\n        res.send('User fetched');\r\n    });\r\n});\r\n\r\napp.get('/createPDFfor/:id', (req,res) => {\r\n    let sql = `SELECT * FROM user WHERE firstName=\\'${req.params.id}\\'`;\r\n    db.query(sql, (err, result) => {\r\n        if (err) throw err;\r\n        console.log(result[0]);\r\n        let doc = new PDFDocument();\r\n       // let stream = doc.pipe(blobStream());\r\n        let filename = result[0].firstName;\r\n        filename = encodeURIComponent(filename) + '.pdf';\r\n\r\n        res.setHeader('Content-disposition', 'attachment; filename=\"' + filename + '\"')\r\n        res.setHeader('Content-type', 'application/pdf');\r\n\r\n        const content = result[0].firstName + ' ' + result[0].lastName;\r\n        doc.y = 300;\r\n        doc.text(content, 50, 50);\r\n        doc.pipe(res);\r\n        doc.end();\r\n/*        let blob;\r\n        stream.on('finish', function (){\r\n            blob = stream.toBlob('application/pdf');\r\n        });*/\r\n\r\n        let sql1 = `UPDATE user SET pdf='${doc.toString()}' WHERE firstName=\\'${req.params.id}\\'`;\r\n        db.query(sql1, (err, result) => {\r\n            if (err) throw err;\r\n            console.log(result[0]);\r\n        });\r\n    });\r\n\r\n});\r\n\r\napp.listen(3000, () => {\r\n    console.log('Server started on port 3000');\r\n})"]}